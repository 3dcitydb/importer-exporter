<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 * 3D City Database - The Open Source CityGML Database
 * http://www.3dcitydb.org/
 * 
 * (C) 2013 - 2015,
 * Chair of Geoinformatics,
 * Technische Universitaet Muenchen, Germany
 * http://www.gis.bgu.tum.de/
 * 
 * The 3D City Database is jointly developed with the following
 * cooperation partners:
 * 
 * virtualcitySYSTEMS GmbH, Berlin <http://www.virtualcitysystems.de/>
 * M.O.S.S. Computer Grafik Systeme GmbH, Muenchen <http://www.moss.de/>
 * 
 * The 3D City Database Importer/Exporter program is free software:
 * you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
-->
<project name="3D City Database Importer Exporter" default="dist" basedir=".">

	<!-- load external property sets -->
	<property file="default.properties" />

	<!-- internal properties -->
	<property name="dir.build.base" location="${dir.build}/base" />
	<property name="dir.build.plugin.api" location="${dir.build}/plugin-api" />
	<property name="dir.build.config" location="${dir.build}/config" />

	<!-- classpath -->
	<path id="classpath">
		<fileset dir="lib" includes="**/*.jar" />
	</path>

	<!-- build number -->
	<buildnumber file="build.num" />

	<!-- IzPack taskdef -->
	<taskdef name="IzPack" classname="com.izforge.izpack.ant.IzPackTask">
		<classpath>
			<fileset dir="${dir.resources.izpack.lib}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>

	<target name="clean" description="clean up">
		<!-- delete the ${dir.build} and ${dir.dest} directory trees -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dest}" />
		<delete dir="${dir.dest.installer}" />
	</target>

	<target name="generate_standalone_config" depends="generate_plugin_api" description="generates a standalone config jar">
		<!-- create the required directories -->
		<mkdir dir="${dir.build.config}" />
		<mkdir dir="${dir.dest.config}" />

		<copy file="${dir.dest.plugin.api}/${impexp.plugin.api.jar.filename}" todir="${dir.dest.config}" />

		<!-- compile the java code from ${dir.src.plugin.api} into ${dir.build.plugin.api} -->
		<javac includeantruntime="false" srcdir="${dir.src.config}" destdir="${dir.build.config}" createMissingPackageInfoClass="false">
			<exclude name="controller/**" />
			<exclude name="internal/**" />
			<exclude name="Config.java" />
			<classpath>
				<filelist>
					<file name="${dir.dest.plugin.api}/${impexp.plugin.api.jar.filename}" />
				</filelist>
			</classpath>
		</javac>

		<!-- put everything in ${dir.build.plugin.api} into .jar file -->
		<jar jarfile="${dir.dest.config}/${impexp.config.name.jar}" basedir="${dir.build.config}">
			<manifest>
				<attribute name="Built-Id" value="${user.name}-${impexp.config.name.short}-${impexp.version}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Implementation-Title" value="${impexp.config.name}" />
				<attribute name="Implementation-Version" value="${impexp.version}-b${build.number}" />
				<attribute name="Implementation-Vendor" value="${vendor.shortinfo}" />
			</manifest>
		</jar>

		<!-- clean up -->
		<delete dir="${dir.build}" />
		<delete dir="${dir.dest.plugin.api}" />
	</target>

	<target name="generate_plugin_api" depends="clean" description="generate the plugin API">
		<!-- create the required directories -->
		<mkdir dir="${dir.build.plugin.api}" />
		<mkdir dir="${dir.dest.plugin.api}" />
		<mkdir dir="${dir.dest.plugin.api.javadoc}" />

		<!-- copy overview.html and replace token -->
		<copy file="${dir.resources.plugin-api.javadoc}/overview.html" tofile="${dir.resources.plugin-api.javadoc}/overview_adapted.html" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!impexp.plugin.api.name!" value="${impexp.plugin.api.name}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!impexp.plugin.api.version!" value="${impexp.plugin.api.version}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!vendor.copyright.year!" value="${vendor.copyright.year}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!vendor.name!" value="${vendor.name}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!vendor.organisation!" value="${vendor.organisation}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!vendor.country!" value="${vendor.country}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!vendor.homepage!" value="${vendor.homepage}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!impexp.name!" value="${impexp.name}" />
		<replace file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" token="!3dcitydb.homepage!" value="${3dcitydb.homepage}" />

		<!-- create javadoc from source files -->
		<javadoc access="public" author="true" classpathref="classpath" destdir="${dir.dest.plugin.api.javadoc}" doctitle="${impexp.plugin.api.name} - ${impexp.plugin.api.version}" maxmemory="256m" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" overview="${dir.resources.plugin-api.javadoc}/overview_adapted.html" packagenames="org.citydb.api.*" sourcepath="${dir.src}" splitindex="true" use="true" version="true" />

		<!-- clean up -->
		<delete file="${dir.resources.plugin-api.doc}/overview_adapted.html" />

		<!-- compile the java code from ${dir.src.plugin.api} into ${dir.build.plugin.api} -->
		<javac includeantruntime="false" classpathref="classpath" srcdir="${dir.src.plugin.api}" destdir="${dir.build.plugin.api}" createMissingPackageInfoClass="false" />

		<!-- copy LICENSE templates -->
		<copy todir="${dir.dest.plugin.api.license}">
			<fileset dir="${dir.resources.license}" includes="**/*" />
		</copy>

		<!-- copy README template -->
		<copy toDir="${dir.dest.plugin.api}">
			<fileset dir="${dir.resources.plugin-api.doc}" includes="**/*" />
		</copy>

		<!-- replace tokens in template files -->
		<replace file="${dir.dest.plugin.api.license}/LICENSE.txt" token="!software.name!" value="${impexp.plugin.api.name}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!impexp.name!" value="${impexp.name}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!impexp.version!" value="${impexp.version}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!impexp.plugin.api.name!" value="${impexp.plugin.api.name}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!impexp.plugin.api.jar.filename!" value="${impexp.plugin.api.jar.filename}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!impexp.plugin.api.version!" value="${impexp.plugin.api.version}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!impexp.plugin.api.maininterface!" value="${impexp.plugin.api.maininterface}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!3dcitydb.name!" value="${3dcitydb.name}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!3dcitydb.homepage!" value="${3dcitydb.homepage}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!3dcitydb.git!" value="${3dcitydb.git}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!vendor.name!" value="${vendor.name}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!vendor.organisation!" value="${vendor.organisation}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!vendor.copyright.year!" value="${vendor.copyright.year}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!vendor.homepage!" value="${vendor.homepage}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!vendor.country!" value="${vendor.country}" />
		<replace file="${dir.dest.plugin.api}/README.txt" token="!dir.dest.plugins.relative!" value="${dir.dest.plugins.relative}" />

		<!-- put everything in ${dir.build.plugin.api} into .jar file -->
		<jar jarfile="${dir.dest.plugin.api}/${impexp.plugin.api.jar.filename}" basedir="${dir.build.plugin.api}">
			<fileset dir="${dir.dest.plugin.api}" includes="README.txt" />
			<fileset dir="${dir.dest.plugin.api.license}" includes="**/*" />
			<manifest>
				<attribute name="Built-Id" value="${user.name}-${impexp.plugin.api.name.short}-${impexp.version}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Implementation-Title" value="${impexp.plugin.api.name}" />
				<attribute name="Implementation-Version" value="${impexp.version}-b${build.number}" />
				<attribute name="Implementation-Vendor" value="${vendor.shortinfo}" />
			</manifest>
		</jar>

		<!-- clean up -->
		<delete dir="${dir.build}" />
		<delete file="${dir.resources.plugin-api.javadoc}/overview_adapted.html" />
	</target>

	<target name="dist" depends="clean, generate_plugin_api" description="generate the distribution">
		<!-- create the build directory structure used by compile -->
		<mkdir dir="${dir.build.base}" />
		<mkdir dir="${dir.dest}" />
		<mkdir dir="${dir.dest.plugins}" />

		<!-- compile the java code from ${dir.src} into ${dir.build} -->
		<javac includeantruntime="false" classpathref="classpath" srcdir="${dir.src}" destdir="${dir.build.base}" />

		<!-- copy resources -->
		<copy todir="${dir.build.base}">
			<fileset dir="${dir.src}" includes="**/*.properties" />
			<fileset dir="${dir.src}" includes="**/jaxb.index" />
		</copy>

		<copy todir="${dir.build.base}">
			<fileset dir="${dir.resources.jar}" includes="**/*" />
		</copy>

		<!-- copy library files -->
		<copy todir="${dir.dest.lib}" flatten="true">
			<fileset dir="${dir.lib}" includes="**/*.jar" />
		</copy>

		<!-- copy LICENSE templates -->
		<copy todir="${dir.dest.license}">
			<fileset dir="${dir.resources.license}" includes="**/*" />
		</copy>

		<!-- copy starter script and README templates -->
		<copy toDir="${dir.dest}">
			<fileset dir="${dir.resources.scripts}" includes="**/*" />
			<fileset dir="${dir.resources.doc}" includes="**/*" />
		</copy>

		<!-- replace tokens in template files -->
		<replace file="${dir.dest}/3DCityDB-Importer-Exporter.bat" token="!impexp.jar.filename!" value="${impexp.jar.filename}" />
		<replace file="${dir.dest}/3DCityDB-Importer-Exporter.bat" token="!impexp.name!" value="${impexp.name}" />
		<replace file="${dir.dest}/3DCityDB-Importer-Exporter.sh" token="!impexp.jar.filename!" value="${impexp.jar.filename}" />
		<replace file="${dir.dest}/3DCityDB-Importer-Exporter.sh" token="!impexp.name!" value="${impexp.name}" />
		<replace file="${dir.dest}/3DCityDB-Importer-Exporter.command" token="!impexp.jar.filename!" value="${impexp.jar.filename}" />
		<replace file="${dir.dest}/3DCityDB-Importer-Exporter.command" token="!impexp.name!" value="${impexp.name}" />
		<replace file="${dir.dest}/3DCityDB-Importer-Exporter.command" token="!mac.os.x!" value="-Xdock:name=&quot;${impexp.name}&quot;" />
		<replace file="${dir.dest.license}/LICENSE.txt" token="!software.name!" value="${impexp.name}" />
		<replace file="${dir.dest}/README.txt" token="!3dcitydb.name!" value="${3dcitydb.name}" />
		<replace file="${dir.dest}/README.txt" token="!3dcitydb.version!" value="${3dcitydb.version}" />
		<replace file="${dir.dest}/README.txt" token="!3dcitydb.homepage!" value="${3dcitydb.homepage}" />
		<replace file="${dir.dest}/README.txt" token="!3dcitydb.git!" value="${3dcitydb.git}" />
		<replace file="${dir.dest}/README.txt" token="!impexp.name!" value="${impexp.name}" />
		<replace file="${dir.dest}/README.txt" token="!impexp.jar.filename!" value="${impexp.jar.filename}" />
		<replace file="${dir.dest}/README.txt" token="!impexp.version!" value="${impexp.version}" />
		<replace file="${dir.dest}/README.txt" token="!vendor.name!" value="${vendor.name}" />
		<replace file="${dir.dest}/README.txt" token="!vendor.organisation!" value="${vendor.organisation}" />
		<replace file="${dir.dest}/README.txt" token="!vendor.copyright.year!" value="${vendor.copyright.year}" />
		<replace file="${dir.dest}/README.txt" token="!vendor.homepage!" value="${vendor.homepage}" />
		<replace file="${dir.dest}/README.txt" token="!vendor.country!" value="${vendor.country}" />

		<!-- set package variables -->
		<fileset dir="${dir.dest.lib}" id="lib.files">
			<include name="*.jar" />
		</fileset>
		<pathconvert property="manifest.classpath" dirsep="/" pathsep=" " refid="lib.files">
			<map from="${dir.dest.lib}${file.separator}" to="" />
		</pathconvert>

		<!-- put everything in ${dir.build} into .jar file -->
		<jar jarfile="${dir.dest.lib}/${impexp.jar.filename}" basedir="${dir.build.base}">
			<fileset dir="${dir.dest}" includes="README.txt" />
			<fileset dir="${dir.dest.license}" includes="**/*" />
			<manifest>
				<attribute name="Built-Id" value="${user.name}-${impexp.name.short}-${impexp.version}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Implementation-Title" value="${impexp.name}" />
				<attribute name="Implementation-Version" value="${impexp.version}-b${build.number}" />
				<attribute name="Implementation-Vendor" value="${vendor.shortinfo}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
				<attribute name="Main-Class" value="${impexp.mainclass}" />
			</manifest>
		</jar>

		<!-- clean up -->
		<delete dir="${dir.build}" />
	</target>

	<target name="generate_setup" depends="dist" description="create installer package">
		<mkdir dir="${dir.dest.installer}" />

		<!-- prepare license template for setup dialog -->
		<loadfile property="app.license" srcfile="${dir.dest.license}/LICENSE.txt" />
		<loadfile property="gpl" srcfile="${dir.dest.license}/COPYING.txt" />
		<loadfile property="lgpl" srcfile="${dir.dest.license}/COPYING.LESSER.txt" />

		<copy file="${dir.resources.izpack.config}/license/license_template" tofile="${dir.resources.izpack.config}/license/license" />
		<replace file="${dir.resources.izpack.config}/license/license" token="!app.license!" value="${app.license}" />
		<replace file="${dir.resources.izpack.config}/license/license" token="!gpl!" value="${gpl}" />
		<replace file="${dir.resources.izpack.config}/license/license" token="!lgpl!" value="${lgpl}" />

		<!-- prepare izpack installation file -->
		<copy file="${dir.resources.izpack}/izpack-install-template.xml" tofile="${dir.resources.izpack}/izpack-install.xml" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!impexp.name!" value="${impexp.name}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!impexp.version!" value="${impexp.version}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!izpack.shortcut.impexp.name!" value="${izpack.shortcut.impexp.name}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!izpack.installation.folder!" value="${izpack.installation.folder}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.resources.izpack.config!" value="${dir.resources.izpack.config}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.dest!" value="${dir.dest}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.dest.plugin.api.relative!" value="${dir.dest.plugin.api.relative}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.dest.plugin.api!" value="${dir.dest.plugin.api}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.resources.3dcitydb!" value="${dir.resources.3dcitydb}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.resources.manual!" value="${dir.resources.manual}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.resources.templates!" value="${dir.resources.templates}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.samples!" value="${dir.samples}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!3dcitydb.name!" value="${3dcitydb.name}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!3dcitydb.version!" value="${3dcitydb.version}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!3dcitydb.homepage!" value="${3dcitydb.homepage}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.dest.plugins!" value="${dir.dest.plugins}" />
		
		<!-- tokens related to plugins -->
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!dir.dest.plugins.relative!" value="${dir.dest.plugins.relative}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!plugin.spreadsheet.generator.dir!" value="${plugin.spreadsheet.generator.dir}" />
		<replace file="${dir.resources.izpack}/izpack-install.xml" token="!plugin.spreadsheet.generator.dir.dest.relative!" value="${plugin.spreadsheet.generator.dir.dest.relative}" />

		<!-- call izpack to create installation package -->
		<IzPack input="${dir.resources.izpack}/izpack-install.xml" output="${dir.dest.installer}/${izpack.installer.name}" basedir="${dir.resources.izpack}" />

		<!-- clean up -->
		<delete file="${dir.resources.izpack.config}/license/license" />
		<delete file="${dir.resources.izpack}/izpack-install.xml" />
	</target>

	<target name="run" depends="dist" description="run importer/exporter application">
		<java jar="${dir.dest.lib}/${impexp.jar.filename}" fork="true" dir="${dir.dest}" />
	</target>
</project>