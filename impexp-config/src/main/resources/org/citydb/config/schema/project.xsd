<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema elementFormDefault="qualified" version="1.0" targetNamespace="http://www.3dcitydb.org/importer-exporter/config" xmlns="http://www.3dcitydb.org/importer-exporter/config" xmlns:tns="http://www.3dcitydb.org/importer-exporter/config" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="and" type="AndOperatorType"/>

  <xs:element name="bbox" type="BBOXOperatorType"/>

  <xs:element name="beyond" type="BeyondOperatorType"/>

  <xs:element name="contains" type="ContainsOperatorType"/>

  <xs:element name="dWithin" type="DWithinOperatorType"/>

  <xs:element name="disjoint" type="DisjointOperatorType"/>

  <xs:element name="envelope" type="BoundingBoxType"/>

  <xs:element name="equals" type="EqualsOperatorType"/>

  <xs:element name="file" type="fileReference"/>

  <xs:element name="filter" type="SelectionFilterType"/>

  <xs:element name="intersects" type="IntersectsOperatorType"/>

  <xs:element name="lineString" type="LineStringType"/>

  <xs:element name="multiLineString" type="MultiLineStringType"/>

  <xs:element name="multiPoint" type="MultiPointType"/>

  <xs:element name="multiPolygon" type="MultiPolygonType"/>

  <xs:element name="not" type="NotOperatorType"/>

  <xs:element name="or" type="OrOperatorType"/>

  <xs:element name="overlaps" type="OverlapsOperatorType"/>

  <xs:element name="point" type="PointType"/>

  <xs:element name="polygon" type="PolygonType"/>

  <xs:element name="project" type="ProjectType"/>

  <xs:element name="propertyIsBetween" type="BetweenOperatorType"/>

  <xs:element name="propertyIsEqualTo" type="EqualToOperatorType"/>

  <xs:element name="propertyIsGreaterThan" type="GreaterThanOperatorType"/>

  <xs:element name="propertyIsGreaterThanOrEqualTo" type="GreaterThanOrEqualToOperatorType"/>

  <xs:element name="propertyIsLessThan" type="LessThanOperatorType"/>

  <xs:element name="propertyIsLessThanOrEqualTo" type="LessThanOrEqualToOperatorType"/>

  <xs:element name="propertyIsLike" type="LikeOperatorType"/>

  <xs:element name="propertyIsNotEqualTo" type="NotEqualToOperatorType"/>

  <xs:element name="propertyIsNull" type="NullOperatorType"/>

  <xs:element name="query" type="QueryType"/>

  <xs:element name="referenceSystems" type="databaseSrsList"/>

  <xs:element name="resourceIds" type="ResourceIdType"/>

  <xs:element name="sql" type="SelectOperatorType"/>

  <xs:element name="touches" type="TouchesOperatorType"/>

  <xs:element name="within" type="WithinOperatorType"/>

  <xs:complexType name="ProjectType">
    <xs:sequence>
      <xs:element name="database" type="DatabaseType" minOccurs="0"/>
      <xs:element name="import" type="ImportType" minOccurs="0"/>
      <xs:element name="export" type="ExportType" minOccurs="0"/>
      <xs:element name="kmlExport" type="KmlExportType" minOccurs="0"/>
      <xs:element name="global" type="GlobalType" minOccurs="0"/>
      <xs:element name="extensions" type="PluginConfigListType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DatabaseType">
    <xs:sequence>
      <xs:element ref="referenceSystems" minOccurs="0"/>
      <xs:element name="connections" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="connection" type="ConnectionType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activeConnection" type="xs:IDREF" minOccurs="0"/>
      <xs:element name="updateBatching" type="UpdateBatchingType" minOccurs="0"/>
      <xs:element name="workspaces" type="WorkspacesType" minOccurs="0"/>
      <xs:element name="operation" type="DBOperationType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="databaseSrsList">
    <xs:sequence>
      <xs:element name="referenceSystem" type="DatabaseSrsType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DatabaseSrsType" final="extension restriction">
    <xs:sequence>
      <xs:element name="srid" type="xs:int"/>
      <xs:element name="gmlSrsName" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="ConnectionType">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="type" type="DatabaseTypeType"/>
      <xs:element name="server" type="xs:anyURI"/>
      <xs:element name="port" type="xs:positiveInteger"/>
      <xs:element name="sid" type="xs:string"/>
      <xs:element name="schema" type="xs:string" minOccurs="0"/>
      <xs:element name="user" type="xs:string"/>
      <xs:element name="password" type="xs:string"/>
      <xs:element name="savePassword" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
    <xs:attribute name="loginTimeout" type="xs:int"/>
    <xs:attribute name="initialSize" type="xs:int"/>
    <xs:attribute name="maxActive" type="xs:int"/>
    <xs:attribute name="maxIdle" type="xs:int"/>
    <xs:attribute name="minIdle" type="xs:int"/>
    <xs:attribute name="maxWait" type="xs:int"/>
    <xs:attribute name="testOnBorrow" type="xs:boolean"/>
    <xs:attribute name="testOnReturn" type="xs:boolean"/>
    <xs:attribute name="testWhileIdle" type="xs:boolean"/>
    <xs:attribute name="validationQuery" type="xs:string"/>
    <xs:attribute name="validatorClassName" type="xs:string"/>
    <xs:attribute name="timeBetweenEvictionRunsMillis" type="xs:int"/>
    <xs:attribute name="numTestsPerEvictionRun" type="xs:int"/>
    <xs:attribute name="minEvictableIdleTimeMillis" type="xs:int"/>
    <xs:attribute name="removeAbandoned" type="xs:boolean"/>
    <xs:attribute name="removeAbandonedTimeout" type="xs:int"/>
    <xs:attribute name="logAbandoned" type="xs:boolean"/>
    <xs:attribute name="connectionProperties" type="xs:string"/>
    <xs:attribute name="initSQL" type="xs:string"/>
    <xs:attribute name="validationInterval" type="xs:long"/>
    <xs:attribute name="jmxEnabled" type="xs:boolean"/>
    <xs:attribute name="fairQueue" type="xs:boolean"/>
    <xs:attribute name="abandonWhenPercentageFull" type="xs:int"/>
    <xs:attribute name="maxAge" type="xs:long"/>
    <xs:attribute name="useEquals" type="xs:boolean"/>
    <xs:attribute name="suspectTimeout" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="UpdateBatchingType">
    <xs:sequence>
      <xs:element name="featureBatchValue" type="xs:positiveInteger" default="20"/>
      <xs:element name="gmlIdCacheBatchValue" type="xs:positiveInteger" default="1000"/>
      <xs:element name="tempBatchValue" type="xs:positiveInteger" default="1000"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="WorkspacesType">
    <xs:sequence>
      <xs:element name="import" type="WorkspaceType"/>
      <xs:element name="export" type="WorkspaceType"/>
      <xs:element name="kmlExport" type="WorkspaceType"/>
      <xs:element name="operations" type="WorkspaceType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="WorkspaceType">
    <xs:sequence>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="timestamp" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DBOperationType">
    <xs:sequence>
      <xs:element name="lastUsed" type="DBOperationModeType" minOccurs="0"/>
      <xs:element name="boundingBoxTypeName" type="xs:QName" minOccurs="0"/>
      <xs:element name="boundingBoxSrs" type="xs:IDREF" minOccurs="0"/>
      <xs:element name="spatialIndex" type="xs:boolean"/>
      <xs:element name="normalIndex" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ImportType">
    <xs:sequence>
      <xs:element name="filter" type="SimpleImportFilterType" minOccurs="0"/>
      <xs:element name="continuation" type="ContinuationType" minOccurs="0"/>
      <xs:element name="path" type="PathType" minOccurs="0"/>
      <xs:element name="gmlId" type="ImportGmlIdType" minOccurs="0"/>
      <xs:element name="address" type="ImportXALType" minOccurs="0"/>
      <xs:element name="appearances" type="ImportAppearanceType" minOccurs="0"/>
      <xs:element name="affineTransformation" type="AffineTransformationType" minOccurs="0"/>
      <xs:element name="indexes" type="IndexType" minOccurs="0"/>
      <xs:element name="xmlValidation" type="XMLValidationType" minOccurs="0"/>
      <xs:element name="xslTransformation" type="XSLTransformationType" minOccurs="0"/>
      <xs:element name="importLog" type="ImportLogType" minOccurs="0"/>
      <xs:element name="resources" type="ImportResourcesType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SimpleImportFilterType">
    <xs:sequence>
      <xs:element name="typeNames" type="FeatureTypeFilterType" minOccurs="0"/>
      <xs:element name="attributes" type="SimpleAttributeFilterType" minOccurs="0"/>
      <xs:element name="count" type="CounterFilterType" minOccurs="0"/>
      <xs:element name="bbox" type="SimpleBBOXOperatorType"/>
    </xs:sequence>
    <xs:attribute name="useTypeNames" type="xs:boolean" use="required"/>
    <xs:attribute name="useAttributeFilter" type="xs:boolean" use="required"/>
    <xs:attribute name="useCountFilter" type="xs:boolean" use="required"/>
    <xs:attribute name="useBboxFilter" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:complexType name="FeatureTypeFilterType">
    <xs:sequence>
      <xs:element name="typeName" type="xs:QName" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SimpleAttributeFilterType">
    <xs:sequence>
      <xs:element name="gmlIds" type="ResourceIdType"/>
      <xs:element name="gmlName" type="LikeOperatorType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ResourceIdType">
    <xs:complexContent>
      <xs:extension base="AbstractPredicateType">
        <xs:sequence>
          <xs:element name="id" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractPredicateType" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="AbstractLogicalOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="AbstractPredicateType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractBinaryLogicalOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="AbstractLogicalOperatorType">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="resourceIds"/>
            <xs:element ref="and"/>
            <xs:element ref="or"/>
            <xs:element ref="not"/>
            <xs:element ref="propertyIsEqualTo"/>
            <xs:element ref="propertyIsNotEqualTo"/>
            <xs:element ref="propertyIsLessThan"/>
            <xs:element ref="propertyIsLessThanOrEqualTo"/>
            <xs:element ref="propertyIsGreaterThan"/>
            <xs:element ref="propertyIsGreaterThanOrEqualTo"/>
            <xs:element ref="propertyIsBetween"/>
            <xs:element ref="propertyIsLike"/>
            <xs:element ref="propertyIsNull"/>
            <xs:element ref="bbox"/>
            <xs:element ref="equals"/>
            <xs:element ref="disjoint"/>
            <xs:element ref="touches"/>
            <xs:element ref="within"/>
            <xs:element ref="overlaps"/>
            <xs:element ref="intersects"/>
            <xs:element ref="contains"/>
            <xs:element ref="beyond"/>
            <xs:element ref="dWithin"/>
            <xs:element ref="sql"/>
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AndOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryLogicalOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="OrOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryLogicalOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NotOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractLogicalOperatorType">
        <xs:choice>
          <xs:element ref="resourceIds"/>
          <xs:element ref="and"/>
          <xs:element ref="or"/>
          <xs:element ref="not"/>
          <xs:element ref="propertyIsEqualTo"/>
          <xs:element ref="propertyIsNotEqualTo"/>
          <xs:element ref="propertyIsLessThan"/>
          <xs:element ref="propertyIsLessThanOrEqualTo"/>
          <xs:element ref="propertyIsGreaterThan"/>
          <xs:element ref="propertyIsGreaterThanOrEqualTo"/>
          <xs:element ref="propertyIsBetween"/>
          <xs:element ref="propertyIsLike"/>
          <xs:element ref="propertyIsNull"/>
          <xs:element ref="bbox"/>
          <xs:element ref="equals"/>
          <xs:element ref="disjoint"/>
          <xs:element ref="touches"/>
          <xs:element ref="within"/>
          <xs:element ref="overlaps"/>
          <xs:element ref="intersects"/>
          <xs:element ref="contains"/>
          <xs:element ref="beyond"/>
          <xs:element ref="dWithin"/>
          <xs:element ref="sql"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractComparisonOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="AbstractPredicateType">
        <xs:sequence>
          <xs:element name="valueReference" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractBinaryComparisonOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="AbstractComparisonOperatorType">
        <xs:sequence>
          <xs:element name="literal" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="matchCase" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NotEqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LessThanOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LessThanOrEqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GreaterThanOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GreaterThanOrEqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="BetweenOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractComparisonOperatorType">
        <xs:sequence>
          <xs:element name="lowerBoundary" type="xs:string"/>
          <xs:element name="upperBoundary" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LikeOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractComparisonOperatorType">
        <xs:sequence>
          <xs:element name="literal" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="wildCard" type="xs:string"/>
        <xs:attribute name="singleCharacter" type="xs:string"/>
        <xs:attribute name="escapeCharacter" type="xs:string"/>
        <xs:attribute name="matchCase" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NullOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractSpatialOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="AbstractPredicateType">
        <xs:sequence>
          <xs:element name="valueReference" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="BBOXOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractSpatialOperatorType">
        <xs:choice>
          <xs:element ref="file"/>
          <xs:element ref="envelope"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="fileReference">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <xs:complexType name="BoundingBoxType">
    <xs:complexContent>
      <xs:extension base="AbstractGeometryType">
        <xs:sequence>
          <xs:element name="lowerCorner" type="PositionType"/>
          <xs:element name="upperCorner" type="PositionType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractGeometryType" abstract="true">
    <xs:sequence/>
    <xs:attribute name="srsRef" type="xs:IDREF"/>
    <xs:attribute name="srid" type="xs:int"/>
  </xs:complexType>

  <xs:simpleType name="PositionType">
    <xs:list itemType="xs:double"/>
  </xs:simpleType>

  <xs:complexType name="PointType">
    <xs:complexContent>
      <xs:extension base="AbstractGeometryType">
        <xs:sequence>
          <xs:element name="pos" type="PositionType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MultiPointType">
    <xs:complexContent>
      <xs:extension base="AbstractGeometryType">
        <xs:sequence>
          <xs:element ref="point" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LineStringType">
    <xs:complexContent>
      <xs:extension base="AbstractGeometryType">
        <xs:sequence>
          <xs:element name="posList" type="PositionListType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PositionListType">
    <xs:simpleContent>
      <xs:extension base="DoubleListType">
        <xs:attribute name="dimension" type="xs:int"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="DoubleListType">
    <xs:list itemType="xs:double"/>
  </xs:simpleType>

  <xs:complexType name="MultiLineStringType">
    <xs:complexContent>
      <xs:extension base="AbstractGeometryType">
        <xs:sequence>
          <xs:element ref="lineString" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PolygonType">
    <xs:complexContent>
      <xs:extension base="AbstractGeometryType">
        <xs:sequence>
          <xs:element name="exterior" type="PositionListType"/>
          <xs:element name="interior" type="PositionListType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MultiPolygonType">
    <xs:complexContent>
      <xs:extension base="AbstractGeometryType">
        <xs:sequence>
          <xs:element ref="polygon" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractBinarySpatialOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="AbstractSpatialOperatorType">
        <xs:choice>
          <xs:element ref="file"/>
          <xs:element ref="envelope"/>
          <xs:element ref="point"/>
          <xs:element ref="multiPoint"/>
          <xs:element ref="lineString"/>
          <xs:element ref="multiLineString"/>
          <xs:element ref="polygon"/>
          <xs:element ref="multiPolygon"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EqualsOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DisjointOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TouchesOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="WithinOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="OverlapsOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="IntersectsOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ContainsOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractDistanceOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="AbstractBinarySpatialOperatorType">
        <xs:sequence>
          <xs:element name="distance" type="DistanceType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DistanceType">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <xs:attribute name="uom" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="BeyondOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractDistanceOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DWithinOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractDistanceOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SelectOperatorType">
    <xs:complexContent>
      <xs:extension base="AbstractPredicateType">
        <xs:sequence>
          <xs:element name="select" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CounterFilterType">
    <xs:sequence>
      <xs:element name="lowerLimit" type="xs:nonNegativeInteger" minOccurs="0"/>
      <xs:element name="upperLimit" type="xs:nonNegativeInteger"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SimpleBBOXOperatorType">
    <xs:complexContent>
      <xs:extension base="BBOXOperatorType">
        <xs:sequence/>
        <xs:attribute name="bboxMode" type="SimpleBBOXModeType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ContinuationType">
    <xs:sequence>
      <xs:element name="lineage" type="xs:string"/>
      <xs:element name="updatingPersonMode" type="UpdatingPersonModeType"/>
      <xs:element name="updatingPerson" type="xs:string" minOccurs="0"/>
      <xs:element name="reasonForUpdate" type="xs:string"/>
      <xs:element name="importCityDBMetadata" type="xs:boolean"/>
      <xs:element name="creationDateMode" type="CreationDateModeType"/>
      <xs:element name="terminationDateMode" type="TerminationDateModeType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PathType">
    <xs:sequence>
      <xs:element name="mode" type="PathModeType"/>
      <xs:element name="standardPath" type="xs:string" minOccurs="0"/>
      <xs:element name="lastUsedPath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ImportGmlIdType">
    <xs:sequence>
      <xs:element name="uuidMode" type="UUIDModeType"/>
      <xs:element name="keepGmlIdAsExternalReference" type="xs:boolean" default="true" minOccurs="0"/>
      <xs:element name="codeSpaceMode" type="CodeSpaceModeType"/>
      <xs:element name="codeSpace" type="xs:string" default="UUID" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ImportXALType">
    <xs:sequence>
      <xs:element name="importXAL" type="xs:boolean" default="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ImportAppearanceType">
    <xs:sequence>
      <xs:element name="import" type="xs:boolean" default="true"/>
      <xs:element name="importTextureFiles" type="xs:boolean" default="true"/>
      <xs:element name="themeForTexturedSurface" type="xs:string" default="rgbTexture"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AffineTransformationType">
    <xs:sequence>
      <xs:element name="transformationMatrix" type="TransformationMatrixType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="isEnabled" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:simpleType name="TransformationMatrixType">
    <xs:list itemType="xs:double"/>
  </xs:simpleType>

  <xs:complexType name="IndexType">
    <xs:sequence>
      <xs:element name="spatial" type="IndexModeType" minOccurs="0"/>
      <xs:element name="normal" type="IndexModeType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="XMLValidationType">
    <xs:sequence>
      <xs:element name="useXMLValidation" type="xs:boolean" default="false"/>
      <xs:element name="reportOneErrorPerFeature" type="xs:boolean" default="false" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="XSLTransformationType">
    <xs:sequence>
      <xs:element name="stylesheet" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="isEnabled" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:complexType name="ImportLogType">
    <xs:sequence>
      <xs:element name="logImportedFeatures" type="xs:boolean" default="false"/>
      <xs:element name="logPath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ImportResourcesType">
    <xs:complexContent>
      <xs:extension base="ResourcesType">
        <xs:sequence>
          <xs:element name="texImageCache" type="UIDCacheConfigType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ResourcesType">
    <xs:sequence>
      <xs:element name="gmlIdCache" type="UIDCacheType"/>
      <xs:element name="threadPool" type="ThreadPoolType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="UIDCacheConfigType">
    <xs:sequence>
      <xs:element name="cacheSize" type="xs:positiveInteger" default="200000"/>
      <xs:element name="pageFactor" type="xs:float" default="0.85"/>
      <xs:element name="partitions" type="xs:int" default="10"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="UIDCacheType">
    <xs:sequence>
      <xs:element name="feature" type="UIDCacheConfigType"/>
      <xs:element name="geometry" type="UIDCacheConfigType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ThreadPoolType">
    <xs:sequence>
      <xs:element name="default" type="ThreadPoolConfigType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ThreadPoolConfigType">
    <xs:sequence>
      <xs:element name="minThreads" type="xs:positiveInteger"/>
      <xs:element name="maxThreads" type="xs:positiveInteger"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ExportType">
    <xs:sequence>
      <xs:element ref="query" minOccurs="0"/>
      <xs:element name="simpleQuery" type="SimpleExportQueryType" minOccurs="0"/>
      <xs:element name="path" type="PathType" minOccurs="0"/>
      <xs:element name="continuation" type="ExportCityDBADEType" minOccurs="0"/>
      <xs:element name="cityObjectGroup" type="ExportCityObjectGroupType" minOccurs="0"/>
      <xs:element name="address" type="ExportAddressType" minOccurs="0"/>
      <xs:element name="appearances" type="ExportAppearanceType" minOccurs="0"/>
      <xs:element name="xlink" type="XLinkType" minOccurs="0"/>
      <xs:element name="xslTransformation" type="XSLTransformationType" minOccurs="0"/>
      <xs:element name="resources" type="ResourcesType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="useSimpleQuery" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:complexType name="QueryType">
    <xs:sequence>
      <xs:element name="typeNames" type="FeatureTypeFilterType" minOccurs="0"/>
      <xs:element name="propertyNames" type="PropertyProjectionFilterType" minOccurs="0"/>
      <xs:element ref="filter" minOccurs="0"/>
      <xs:element name="count" type="CounterFilterType" minOccurs="0"/>
      <xs:element name="lods" type="LodFilterType" minOccurs="0"/>
      <xs:element name="appearance" type="AppearanceFilterType" minOccurs="0"/>
      <xs:element name="tiling" type="TilingType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="targetSrs" type="xs:IDREF"/>
    <xs:attribute name="targetSrid" type="xs:int"/>
    <xs:attribute name="targetSrsName" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="PropertyProjectionFilterType">
    <xs:sequence>
      <xs:element name="context" type="PropertyProjectionContextType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PropertyProjectionContextType">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="propertyName" type="PropertyNameType"/>
        <xs:element name="genericAttributeName" type="GenericAttributeNameType"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="typeName" type="xs:QName" use="required"/>
    <xs:attribute name="mode" type="PropertyProjectionModeType"/>
  </xs:complexType>

  <xs:simpleType name="PropertyNameType">
    <xs:restriction base="xs:QName"/>
  </xs:simpleType>

  <xs:complexType name="GenericAttributeNameType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="type" type="GenericAttributeTypeType"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="SelectionFilterType">
    <xs:choice>
      <xs:element ref="resourceIds"/>
      <xs:element ref="and"/>
      <xs:element ref="or"/>
      <xs:element ref="not"/>
      <xs:element ref="propertyIsEqualTo"/>
      <xs:element ref="propertyIsNotEqualTo"/>
      <xs:element ref="propertyIsLessThan"/>
      <xs:element ref="propertyIsLessThanOrEqualTo"/>
      <xs:element ref="propertyIsGreaterThan"/>
      <xs:element ref="propertyIsGreaterThanOrEqualTo"/>
      <xs:element ref="propertyIsBetween"/>
      <xs:element ref="propertyIsLike"/>
      <xs:element ref="propertyIsNull"/>
      <xs:element ref="bbox"/>
      <xs:element ref="equals"/>
      <xs:element ref="disjoint"/>
      <xs:element ref="touches"/>
      <xs:element ref="within"/>
      <xs:element ref="overlaps"/>
      <xs:element ref="intersects"/>
      <xs:element ref="contains"/>
      <xs:element ref="beyond"/>
      <xs:element ref="dWithin"/>
      <xs:element ref="sql"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="LodFilterType">
    <xs:sequence>
      <xs:element name="lod" type="xs:int" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="mode" type="LodFilterModeType"/>
    <xs:attribute name="searchMode" type="LodSearchDepthModeType"/>
    <xs:attribute name="searchDepth" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="AppearanceFilterType">
    <xs:sequence>
      <xs:element name="nullTheme" type="xs:boolean" minOccurs="0"/>
      <xs:element name="theme" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TilingType">
    <xs:sequence>
      <xs:element name="extent" type="BoundingBoxType"/>
      <xs:element name="rows" type="xs:int" default="1"/>
      <xs:element name="columns" type="xs:int" default="1"/>
      <xs:choice minOccurs="0">
        <xs:element name="cityGMLTilingOptions" type="CityGMLTilingOptionsType"/>
        <xs:element name="kmlTilingOptions" type="KmlTilingOptionsType"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CityGMLTilingOptionsType">
    <xs:complexContent>
      <xs:extension base="AbstractTilingOptionsType">
        <xs:sequence>
          <xs:element name="rows" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="columns" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="tilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="tilePathSuffix" type="TileSuffixModeType" minOccurs="0"/>
          <xs:element name="tileNameSuffix" type="TileNameSuffixModeType" minOccurs="0"/>
          <xs:element name="includeTileAsGenericAttribute" type="xs:boolean" default="false" minOccurs="0"/>
          <xs:element name="genericAttributeValue" type="TileSuffixModeType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractTilingOptionsType" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="KmlTilingOptionsType">
    <xs:complexContent>
      <xs:extension base="AbstractTilingOptionsType">
        <xs:sequence>
          <xs:element name="rows" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="columns" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="autoTileSideLength" type="xs:double"/>
        </xs:sequence>
        <xs:attribute name="mode" type="KmlTilingModeType"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SimpleExportQueryType">
    <xs:sequence>
      <xs:element name="typeNames" type="FeatureTypeFilterType" minOccurs="0"/>
      <xs:element name="selection" type="SimpleSelectionFilterType" minOccurs="0"/>
      <xs:element name="count" type="CounterFilterType" minOccurs="0"/>
      <xs:element name="lods" type="LodFilterType" minOccurs="0"/>
      <xs:element name="bbox" type="SimpleBBOXOperatorType"/>
      <xs:element name="tilingOptions" type="CityGMLTilingOptionsType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="version" type="CityGMLVersionType"/>
    <xs:attribute name="targetSrs" type="xs:IDREF"/>
    <xs:attribute name="useTypeNames" type="xs:boolean" use="required"/>
    <xs:attribute name="useSelectionFilter" type="xs:boolean" use="required"/>
    <xs:attribute name="useCountFilter" type="xs:boolean" use="required"/>
    <xs:attribute name="useLodFilter" type="xs:boolean" use="required"/>
    <xs:attribute name="useBboxFilter" type="xs:boolean" use="required"/>
    <xs:attribute name="useTiling" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:complexType name="SimpleSelectionFilterType">
    <xs:complexContent>
      <xs:extension base="SimpleAttributeFilterType">
        <xs:sequence>
          <xs:element ref="sql"/>
        </xs:sequence>
        <xs:attribute name="useSQLFilter" type="xs:boolean" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ExportCityDBADEType">
    <xs:sequence>
      <xs:element name="exportCityDBMetadata" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ExportCityObjectGroupType">
    <xs:sequence>
      <xs:element name="exportMemberAsXLinks" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ExportAddressType">
    <xs:sequence>
      <xs:element name="exportMode" type="AddressModeType"/>
      <xs:element name="useFallback" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ExportAppearanceType">
    <xs:sequence>
      <xs:element name="export" type="xs:boolean" default="true"/>
      <xs:element name="exportTextureFiles" type="xs:boolean" default="true"/>
      <xs:element name="overwriteTextureFiles" type="xs:boolean" default="false" minOccurs="0"/>
      <xs:element name="uniqueTextureFileNames" type="xs:boolean" minOccurs="0"/>
      <xs:element name="texturePath" type="TexturePathType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TexturePathType">
    <xs:sequence>
      <xs:element name="relativePath" type="xs:string" minOccurs="0"/>
      <xs:element name="absolutePath" type="xs:string" minOccurs="0"/>
      <xs:element name="noOfBuckets" type="xs:int" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="mode" type="TexturePathModeType"/>
    <xs:attribute name="useBuckets" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:complexType name="XLinkType">
    <xs:sequence>
      <xs:element name="feature" type="XLinkFeatureConfigType"/>
      <xs:element name="geometry" type="XLinkConfigType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="XLinkFeatureConfigType">
    <xs:complexContent>
      <xs:extension base="XLinkConfigType">
        <xs:sequence>
          <xs:element name="keepGmlIdAsExternalReference" type="xs:boolean" default="false" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XLinkConfigType">
    <xs:sequence>
      <xs:element name="multipleRepresentationMode" type="XLinkModeType"/>
      <xs:element name="idPrefix" type="xs:string" default="UUID_" minOccurs="0"/>
      <xs:element name="appendId" type="xs:boolean" default="false" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="KmlExportType">
    <xs:sequence>
      <xs:element name="query" type="SimpleKmlExportQueryType" minOccurs="0"/>
      <xs:element name="path" type="PathType" minOccurs="0"/>
      <xs:element name="lodToExportFrom" type="xs:int"/>
      <xs:element name="buildingDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="buildingColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="buildingBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="waterBodyDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="waterBodyColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="waterBodyBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="landUseDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="landUseColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="landUseBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="vegetationDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="vegetationColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="vegetationBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="transportationDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="transportationColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="transportationBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="reliefDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reliefColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="reliefBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="cityFurnitureDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cityFurnitureColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="cityFurnitureBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="genericCityObjectDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="genericCityObjectColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="genericCityObject3DBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="genericCityObjectPointAndCurve" type="PointAndCurve" minOccurs="0"/>
      <xs:element name="cityObjectGroupDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="cityObjectGroupBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="bridgeDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="bridgeColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="bridgeBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="tunnelDisplayForms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="displayForm" type="DisplayFormType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="tunnelColladaOptions" type="ColladaOptions" minOccurs="0"/>
      <xs:element name="tunnelBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="lod0FootprintMode" type="Lod0FootprintMode" minOccurs="0"/>
      <xs:element name="exportAsKmz" type="xs:boolean"/>
      <xs:element name="exportGltfV1" type="xs:boolean"/>
      <xs:element name="showBoundingBox" type="xs:boolean"/>
      <xs:element name="showTileBorders" type="xs:boolean"/>
      <xs:element name="exportEmptyTiles" type="xs:boolean"/>
      <xs:element name="oneFilePerObject" type="xs:boolean"/>
      <xs:element name="singleObjectRegionSize" type="xs:double"/>
      <xs:element name="viewRefreshMode" type="xs:string" minOccurs="0"/>
      <xs:element name="viewRefreshTime" type="xs:double"/>
      <xs:element name="writeJSONFile" type="xs:boolean"/>
      <xs:element name="writeJSONPFile" type="xs:boolean"/>
      <xs:element name="callbackNameJSONP" type="xs:string" minOccurs="0"/>
      <xs:element name="createGltfModel" type="xs:boolean"/>
      <xs:element name="pathOfGltfConverter" type="xs:string" minOccurs="0"/>
      <xs:element name="notCreateColladaFiles" type="xs:boolean"/>
      <xs:element name="embedTexturesInGltfFiles" type="xs:boolean"/>
      <xs:element name="appearanceTheme" type="xs:string" minOccurs="0"/>
      <xs:element name="altitudeMode" type="AltitudeMode" minOccurs="0"/>
      <xs:element name="altitudeOffsetMode" type="AltitudeOffsetMode" minOccurs="0"/>
      <xs:element name="altitudeOffsetValue" type="xs:double"/>
      <xs:element name="callGElevationService" type="xs:boolean"/>
      <xs:element name="useOriginalZCoords" type="xs:boolean"/>
      <xs:element name="idPrefixes" type="PrefixesType" minOccurs="0"/>
      <xs:element name="resources" type="ResourcesType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SimpleKmlExportQueryType">
    <xs:sequence>
      <xs:element name="typeNames" type="FeatureTypeFilterType" minOccurs="0"/>
      <xs:element name="attributes" type="SimpleAttributeFilterType" minOccurs="0"/>
      <xs:element ref="bbox"/>
      <xs:element name="tilingOptions" type="KmlTilingOptionsType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="mode" type="KmlExportModeType"/>
  </xs:complexType>

  <xs:complexType name="DisplayFormType">
    <xs:sequence>
      <xs:element name="form" type="xs:int"/>
      <xs:element name="active" type="xs:boolean"/>
      <xs:element name="visibleFrom" type="xs:int"/>
      <xs:element name="rgba0" type="xs:int"/>
      <xs:element name="rgba1" type="xs:int"/>
      <xs:element name="rgba2" type="xs:int"/>
      <xs:element name="rgba3" type="xs:int"/>
      <xs:element name="rgba4" type="xs:int"/>
      <xs:element name="rgba5" type="xs:int"/>
      <xs:element name="highlightingEnabled" type="xs:boolean"/>
      <xs:element name="highlightingDistance" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ColladaOptions">
    <xs:sequence>
      <xs:element name="ignoreSurfaceOrientation" type="xs:boolean"/>
      <xs:element name="generateSurfaceNormals" type="xs:boolean"/>
      <xs:element name="cropImages" type="xs:boolean"/>
      <xs:element name="generateTextureAtlases" type="xs:boolean"/>
      <xs:element name="packingAlgorithm" type="xs:int"/>
      <xs:element name="textureAtlasPots" type="xs:boolean"/>
      <xs:element name="scaleImages" type="xs:boolean"/>
      <xs:element name="imageScaleFactor" type="xs:double"/>
      <xs:element name="groupObjects" type="xs:boolean"/>
      <xs:element name="groupSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="BalloonType">
    <xs:sequence>
      <xs:element name="includeDescription" type="xs:boolean"/>
      <xs:element name="balloonContentMode" type="BalloonContentMode" minOccurs="0"/>
      <xs:element name="balloonContentPath" type="PathType" minOccurs="0"/>
      <xs:element name="balloonContentTemplateFile" type="xs:string" minOccurs="0"/>
      <xs:element name="balloonContentInSeparateFile" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PointAndCurve">
    <xs:sequence>
      <xs:element name="pointBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="pointDisplayMode" type="PointDisplayMode" minOccurs="0"/>
      <xs:element name="pointAltitudeMode" type="AltitudeMode" minOccurs="0"/>
      <xs:element name="pointThickness" type="xs:double"/>
      <xs:element name="pointNormalColor" type="xs:int"/>
      <xs:element name="pointHighlightingEnabled" type="xs:boolean"/>
      <xs:element name="pointHighlightedThickness" type="xs:double"/>
      <xs:element name="pointHighlightedColor" type="xs:int"/>
      <xs:element name="pointIconColor" type="xs:int"/>
      <xs:element name="pointIconScale" type="xs:double"/>
      <xs:element name="pointCubeLengthOfSide" type="xs:double"/>
      <xs:element name="pointCubeFillColor" type="xs:int"/>
      <xs:element name="pointCubeHighlightingEnabled" type="xs:boolean"/>
      <xs:element name="pointCubeHighlightedColor" type="xs:int"/>
      <xs:element name="curveBalloon" type="BalloonType" minOccurs="0"/>
      <xs:element name="curveAltitudeMode" type="AltitudeMode" minOccurs="0"/>
      <xs:element name="curveThickness" type="xs:double"/>
      <xs:element name="curveNormalColor" type="xs:int"/>
      <xs:element name="curveHighlightingEnabled" type="xs:boolean"/>
      <xs:element name="curveHighlightedThickness" type="xs:double"/>
      <xs:element name="curveHighlightedColor" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PrefixesType">
    <xs:sequence>
      <xs:element name="placemarkFootprint" type="xs:string" minOccurs="0"/>
      <xs:element name="placemarkExtruded" type="xs:string" minOccurs="0"/>
      <xs:element name="placemarkGeometry" type="xs:string" minOccurs="0"/>
      <xs:element name="placemarkCollada" type="xs:string" minOccurs="0"/>
      <xs:element name="placemarkHighlight" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="GlobalType">
    <xs:sequence>
      <xs:element name="cache" type="CacheType" minOccurs="0"/>
      <xs:element name="logging" type="LoggingType" minOccurs="0"/>
      <xs:element name="language" type="LanguageType" minOccurs="0"/>
      <xs:element name="proxies" type="ProxiesType" minOccurs="0"/>
      <xs:element name="apiKeys" type="APIKeysType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CacheType">
    <xs:sequence>
      <xs:element name="mode" type="CacheModeType"/>
      <xs:element name="localPath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="LoggingType">
    <xs:sequence>
      <xs:element name="console" type="LogConsoleType" minOccurs="0"/>
      <xs:element name="file" type="LogFileType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="LogConsoleType">
    <xs:sequence>
      <xs:element name="wrapText" type="xs:boolean"/>
      <xs:element name="logLevel" type="LogLevelType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="LogFileType">
    <xs:sequence>
      <xs:element name="logLevel" type="LogLevelType" minOccurs="0"/>
      <xs:element name="useAlternativeLogPath" type="xs:boolean" minOccurs="0"/>
      <xs:element name="alternativeLogPath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="active" type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType name="ProxiesType">
    <xs:sequence>
      <xs:element name="proxyList" type="ProxyListType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="useSingleProxy" type="xs:boolean"/>
    <xs:attribute name="singleProxy" type="ProxyType"/>
  </xs:complexType>

  <xs:complexType name="ProxyListType">
    <xs:sequence>
      <xs:element name="proxy" type="ProxyConfigType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ProxyConfigType">
    <xs:sequence>
      <xs:element name="host" type="xs:string" minOccurs="0"/>
      <xs:element name="port" type="xs:int" minOccurs="0"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
      <xs:element name="password" type="xs:string" minOccurs="0"/>
      <xs:element name="savePassword" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="type" type="ProxyType" use="required"/>
    <xs:attribute name="isEnabled" type="xs:boolean" use="required"/>
    <xs:attribute name="requiresAuthentication" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:complexType name="APIKeysType">
    <xs:sequence>
      <xs:element name="googleGeocoding" type="xs:string" minOccurs="0"/>
      <xs:element name="googleElevation" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PluginConfigListType">
    <xs:sequence>
      <xs:element name="plugin" type="PluginConfigItemType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PluginConfigItemType">
    <xs:sequence>
      <xs:element name="config" type="PluginConfigType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PluginConfigType">
    <xs:sequence/>
  </xs:complexType>

  <xs:simpleType name="DatabaseTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Oracle"/>
      <xs:enumeration value="PostGIS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DBOperationModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="report"/>
      <xs:enumeration value="boundingBox"/>
      <xs:enumeration value="indexes"/>
      <xs:enumeration value="srs"/>
      <xs:enumeration value="ade"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SimpleBBOXModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="within"/>
      <xs:enumeration value="overlap"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="UpdatingPersonModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="database"/>
      <xs:enumeration value="user"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CreationDateModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="inherit"/>
      <xs:enumeration value="complement"/>
      <xs:enumeration value="replace"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TerminationDateModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="inherit"/>
      <xs:enumeration value="complement"/>
      <xs:enumeration value="replace"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="PathModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="lastUsed"/>
      <xs:enumeration value="standard"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="UUIDModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="complement"/>
      <xs:enumeration value="replace"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CodeSpaceModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="relativeFileName"/>
      <xs:enumeration value="absoluteFileName"/>
      <xs:enumeration value="user"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="IndexModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="unchanged"/>
      <xs:enumeration value="deactivate"/>
      <xs:enumeration value="deactivate_activate"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="PropertyProjectionModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="keep"/>
      <xs:enumeration value="remove"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="GenericAttributeTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="stringAttribute"/>
      <xs:enumeration value="intAttribute"/>
      <xs:enumeration value="doubleAttribute"/>
      <xs:enumeration value="dateAttribute"/>
      <xs:enumeration value="uriAttribute"/>
      <xs:enumeration value="measureAttribute"/>
      <xs:enumeration value="genericAttributeSet"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LodFilterModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="or"/>
      <xs:enumeration value="and"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LodSearchDepthModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="all"/>
      <xs:enumeration value="depth"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TileSuffixModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="row_column"/>
      <xs:enumeration value="xMin_yMin"/>
      <xs:enumeration value="xMax_yMin"/>
      <xs:enumeration value="xMin_yMax"/>
      <xs:enumeration value="xMax_yMax"/>
      <xs:enumeration value="xMin_yMin_xMax_yMax"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TileNameSuffixModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="sameAsPath"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="KmlTilingModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="no_tiling"/>
      <xs:enumeration value="automatic"/>
      <xs:enumeration value="manual"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CityGMLVersionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="2.0.0"/>
      <xs:enumeration value="1.0.0"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="AddressModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="db"/>
      <xs:enumeration value="xal"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TexturePathModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="relative"/>
      <xs:enumeration value="absolute"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XLinkModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="xlink"/>
      <xs:enumeration value="copy"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="KmlExportModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="single"/>
      <xs:enumeration value="bbox"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="BalloonContentMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="gen_attrib"/>
      <xs:enumeration value="file"/>
      <xs:enumeration value="gen_attrib_and_file"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="PointDisplayMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="icon"/>
      <xs:enumeration value="crossLine"/>
      <xs:enumeration value="cube"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="AltitudeMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="relative"/>
      <xs:enumeration value="absolute"/>
      <xs:enumeration value="clampToGround"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Lod0FootprintMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="footprint"/>
      <xs:enumeration value="roofprint"/>
      <xs:enumeration value="roofprint_prior_footprint"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="AltitudeOffsetMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="no_offset"/>
      <xs:enumeration value="constant"/>
      <xs:enumeration value="bottom_zero"/>
      <xs:enumeration value="generic_attribute"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CacheModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="database"/>
      <xs:enumeration value="local"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LogLevelType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="error"/>
      <xs:enumeration value="warn"/>
      <xs:enumeration value="info"/>
      <xs:enumeration value="debug"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LanguageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="de"/>
      <xs:enumeration value="en"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ProxyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="http"/>
      <xs:enumeration value="https"/>
      <xs:enumeration value="socks"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

