<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema elementFormDefault="qualified" version="1.0" targetNamespace="http://www.3dcitydb.org/importer-exporter/config" xmlns:tns="http://www.3dcitydb.org/importer-exporter/config" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="and" type="tns:AndOperatorType"/>

  <xs:element name="bbox" type="tns:BBOXOperatorType"/>

  <xs:element name="beyond" type="tns:BeyondOperatorType"/>

  <xs:element name="contains" type="tns:ContainsOperatorType"/>

  <xs:element name="dWithin" type="tns:DWithinOperatorType"/>

  <xs:element name="disjoint" type="tns:DisjointOperatorType"/>

  <xs:element name="envelope" type="tns:BoundingBoxType"/>

  <xs:element name="equals" type="tns:EqualsOperatorType"/>

  <xs:element name="file" type="tns:fileReference"/>

  <xs:element name="filter" type="tns:SelectionFilterType"/>

  <xs:element name="intersects" type="tns:IntersectsOperatorType"/>

  <xs:element name="lineString" type="tns:LineStringType"/>

  <xs:element name="multiLineString" type="tns:MultiLineStringType"/>

  <xs:element name="multiPoint" type="tns:MultiPointType"/>

  <xs:element name="multiPolygon" type="tns:MultiPolygonType"/>

  <xs:element name="not" type="tns:NotOperatorType"/>

  <xs:element name="or" type="tns:OrOperatorType"/>

  <xs:element name="overlaps" type="tns:OverlapsOperatorType"/>

  <xs:element name="point" type="tns:PointType"/>

  <xs:element name="polygon" type="tns:PolygonType"/>

  <xs:element name="propertyIsBetween" type="tns:BetweenOperatorType"/>

  <xs:element name="propertyIsEqualTo" type="tns:EqualToOperatorType"/>

  <xs:element name="propertyIsGreaterThan" type="tns:GreaterThanOperatorType"/>

  <xs:element name="propertyIsGreaterThanOrEqualTo" type="tns:GreaterThanOrEqualToOperatorType"/>

  <xs:element name="propertyIsLessThan" type="tns:LessThanOperatorType"/>

  <xs:element name="propertyIsLessThanOrEqualTo" type="tns:LessThanOrEqualToOperatorType"/>

  <xs:element name="propertyIsLike" type="tns:LikeOperatorType"/>

  <xs:element name="propertyIsNotEqualTo" type="tns:NotEqualToOperatorType"/>

  <xs:element name="propertyIsNull" type="tns:NullOperatorType"/>

  <xs:element name="query" type="tns:QueryType"/>

  <xs:element name="resourceIds" type="tns:ResourceIdType"/>

  <xs:element name="sql" type="tns:SelectOperatorType"/>

  <xs:element name="touches" type="tns:TouchesOperatorType"/>

  <xs:element name="within" type="tns:WithinOperatorType"/>

  <xs:element name="wrapper" type="tns:QueryWrapperType"/>

  <xs:complexType name="QueryWrapperType">
    <xs:sequence>
      <xs:element ref="tns:query" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="QueryType">
    <xs:sequence>
      <xs:element name="typeNames" type="tns:FeatureTypeFilterType" minOccurs="0"/>
      <xs:element name="propertyNames" type="tns:PropertyProjectionFilterType" minOccurs="0"/>
      <xs:element ref="tns:filter" minOccurs="0"/>
      <xs:element name="count" type="tns:CounterFilterType" minOccurs="0"/>
      <xs:element name="lods" type="tns:LodFilterType" minOccurs="0"/>
      <xs:element name="appearance" type="tns:AppearanceFilterType" minOccurs="0"/>
      <xs:element name="tiling" type="tns:TilingType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="targetSrs" type="xs:IDREF"/>
    <xs:attribute name="targetSrid" type="xs:int"/>
    <xs:attribute name="targetSrsName" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="FeatureTypeFilterType">
    <xs:sequence>
      <xs:element name="typeName" type="xs:QName" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PropertyProjectionFilterType">
    <xs:sequence>
      <xs:element name="context" type="tns:PropertyProjectionContextType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PropertyProjectionContextType">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="propertyName" type="tns:PropertyNameType"/>
        <xs:element name="genericAttributeName" type="tns:GenericAttributeNameType"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="typeName" type="xs:QName" use="required"/>
    <xs:attribute name="mode" type="tns:PropertyProjectionModeType"/>
  </xs:complexType>

  <xs:simpleType name="PropertyNameType">
    <xs:restriction base="xs:QName"/>
  </xs:simpleType>

  <xs:complexType name="GenericAttributeNameType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="type" type="tns:GenericAttributeTypeType"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="SelectionFilterType">
    <xs:choice>
      <xs:element ref="tns:and"/>
      <xs:element ref="tns:or"/>
      <xs:element ref="tns:not"/>
      <xs:element ref="tns:propertyIsEqualTo"/>
      <xs:element ref="tns:propertyIsNotEqualTo"/>
      <xs:element ref="tns:propertyIsLessThan"/>
      <xs:element ref="tns:propertyIsLessThanOrEqualTo"/>
      <xs:element ref="tns:propertyIsGreaterThan"/>
      <xs:element ref="tns:propertyIsGreaterThanOrEqualTo"/>
      <xs:element ref="tns:propertyIsBetween"/>
      <xs:element ref="tns:propertyIsLike"/>
      <xs:element ref="tns:propertyIsNull"/>
      <xs:element ref="tns:bbox"/>
      <xs:element ref="tns:equals"/>
      <xs:element ref="tns:disjoint"/>
      <xs:element ref="tns:touches"/>
      <xs:element ref="tns:within"/>
      <xs:element ref="tns:overlaps"/>
      <xs:element ref="tns:intersects"/>
      <xs:element ref="tns:contains"/>
      <xs:element ref="tns:beyond"/>
      <xs:element ref="tns:dWithin"/>
      <xs:element ref="tns:resourceIds"/>
      <xs:element ref="tns:sql"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="AbstractPredicateType" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="AbstractLogicalOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:AbstractPredicateType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractBinaryLogicalOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:AbstractLogicalOperatorType">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="tns:and"/>
            <xs:element ref="tns:or"/>
            <xs:element ref="tns:not"/>
            <xs:element ref="tns:propertyIsEqualTo"/>
            <xs:element ref="tns:propertyIsNotEqualTo"/>
            <xs:element ref="tns:propertyIsLessThan"/>
            <xs:element ref="tns:propertyIsLessThanOrEqualTo"/>
            <xs:element ref="tns:propertyIsGreaterThan"/>
            <xs:element ref="tns:propertyIsGreaterThanOrEqualTo"/>
            <xs:element ref="tns:propertyIsBetween"/>
            <xs:element ref="tns:propertyIsLike"/>
            <xs:element ref="tns:propertyIsNull"/>
            <xs:element ref="tns:bbox"/>
            <xs:element ref="tns:equals"/>
            <xs:element ref="tns:disjoint"/>
            <xs:element ref="tns:touches"/>
            <xs:element ref="tns:within"/>
            <xs:element ref="tns:overlaps"/>
            <xs:element ref="tns:intersects"/>
            <xs:element ref="tns:contains"/>
            <xs:element ref="tns:beyond"/>
            <xs:element ref="tns:dWithin"/>
            <xs:element ref="tns:resourceIds"/>
            <xs:element ref="tns:sql"/>
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AndOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryLogicalOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="OrOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryLogicalOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NotOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractLogicalOperatorType">
        <xs:choice>
          <xs:element ref="tns:and"/>
          <xs:element ref="tns:or"/>
          <xs:element ref="tns:not"/>
          <xs:element ref="tns:propertyIsEqualTo"/>
          <xs:element ref="tns:propertyIsNotEqualTo"/>
          <xs:element ref="tns:propertyIsLessThan"/>
          <xs:element ref="tns:propertyIsLessThanOrEqualTo"/>
          <xs:element ref="tns:propertyIsGreaterThan"/>
          <xs:element ref="tns:propertyIsGreaterThanOrEqualTo"/>
          <xs:element ref="tns:propertyIsBetween"/>
          <xs:element ref="tns:propertyIsLike"/>
          <xs:element ref="tns:propertyIsNull"/>
          <xs:element ref="tns:bbox"/>
          <xs:element ref="tns:equals"/>
          <xs:element ref="tns:disjoint"/>
          <xs:element ref="tns:touches"/>
          <xs:element ref="tns:within"/>
          <xs:element ref="tns:overlaps"/>
          <xs:element ref="tns:intersects"/>
          <xs:element ref="tns:contains"/>
          <xs:element ref="tns:beyond"/>
          <xs:element ref="tns:dWithin"/>
          <xs:element ref="tns:resourceIds"/>
          <xs:element ref="tns:sql"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractComparisonOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:AbstractPredicateType">
        <xs:sequence>
          <xs:element name="valueReference" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractBinaryComparisonOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:AbstractComparisonOperatorType">
        <xs:sequence>
          <xs:element name="literal" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="matchCase" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NotEqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LessThanOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LessThanOrEqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GreaterThanOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="GreaterThanOrEqualToOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinaryComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="BetweenOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractComparisonOperatorType">
        <xs:sequence>
          <xs:element name="lowerBoundary" type="xs:string"/>
          <xs:element name="upperBoundary" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LikeOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractComparisonOperatorType">
        <xs:sequence>
          <xs:element name="literal" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="wildCard" type="xs:string"/>
        <xs:attribute name="singleCharacter" type="xs:string"/>
        <xs:attribute name="escapeCharacter" type="xs:string"/>
        <xs:attribute name="matchCase" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NullOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractComparisonOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractSpatialOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:AbstractPredicateType">
        <xs:sequence>
          <xs:element name="valueReference" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="BBOXOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractSpatialOperatorType">
        <xs:choice>
          <xs:element ref="tns:file"/>
          <xs:element ref="tns:envelope"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="fileReference">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <xs:complexType name="BoundingBoxType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractGeometryType">
        <xs:sequence>
          <xs:element name="lowerCorner" type="tns:PositionType"/>
          <xs:element name="upperCorner" type="tns:PositionType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractGeometryType" abstract="true">
    <xs:sequence/>
    <xs:attribute name="srsRef" type="xs:IDREF"/>
    <xs:attribute name="srid" type="xs:int"/>
  </xs:complexType>

  <xs:simpleType name="PositionType">
    <xs:list itemType="xs:double"/>
  </xs:simpleType>

  <xs:complexType name="DatabaseSrsType" final="extension restriction">
    <xs:sequence>
      <xs:element name="srid" type="xs:int"/>
      <xs:element name="gmlSrsName" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="PointType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractGeometryType">
        <xs:sequence>
          <xs:element name="pos" type="tns:PositionType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MultiPointType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractGeometryType">
        <xs:sequence>
          <xs:element ref="tns:point" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="LineStringType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractGeometryType">
        <xs:sequence>
          <xs:element name="posList" type="tns:PositionListType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PositionListType">
    <xs:simpleContent>
      <xs:extension base="tns:DoubleListType">
        <xs:attribute name="dimension" type="xs:int"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="DoubleListType">
    <xs:list itemType="xs:double"/>
  </xs:simpleType>

  <xs:complexType name="MultiLineStringType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractGeometryType">
        <xs:sequence>
          <xs:element ref="tns:lineString" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="PolygonType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractGeometryType">
        <xs:sequence>
          <xs:element name="exterior" type="tns:PositionListType"/>
          <xs:element name="interior" type="tns:PositionListType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MultiPolygonType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractGeometryType">
        <xs:sequence>
          <xs:element ref="tns:polygon" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractBinarySpatialOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:AbstractSpatialOperatorType">
        <xs:choice>
          <xs:element ref="tns:file"/>
          <xs:element ref="tns:envelope"/>
          <xs:element ref="tns:point"/>
          <xs:element ref="tns:multiPoint"/>
          <xs:element ref="tns:lineString"/>
          <xs:element ref="tns:multiLineString"/>
          <xs:element ref="tns:polygon"/>
          <xs:element ref="tns:multiPolygon"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EqualsOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DisjointOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TouchesOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="WithinOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="OverlapsOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="IntersectsOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ContainsOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractDistanceOperatorType" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:AbstractBinarySpatialOperatorType">
        <xs:sequence>
          <xs:element name="distance" type="tns:DistanceType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DistanceType">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <xs:attribute name="uom" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="BeyondOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractDistanceOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DWithinOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractDistanceOperatorType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ResourceIdType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractPredicateType">
        <xs:sequence>
          <xs:element name="id" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SelectOperatorType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractPredicateType">
        <xs:sequence>
          <xs:element name="select" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CounterFilterType">
    <xs:sequence>
      <xs:element name="lowerLimit" type="xs:nonNegativeInteger" minOccurs="0"/>
      <xs:element name="upperLimit" type="xs:nonNegativeInteger"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="LodFilterType">
    <xs:sequence>
      <xs:element name="lod" type="xs:int" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="mode" type="tns:LodFilterModeType"/>
    <xs:attribute name="searchMode" type="tns:LodSearchDepthModeType"/>
    <xs:attribute name="searchDepth" type="xs:int"/>
  </xs:complexType>

  <xs:complexType name="AppearanceFilterType">
    <xs:sequence>
      <xs:element name="nullTheme" type="xs:boolean" minOccurs="0"/>
      <xs:element name="theme" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TilingType">
    <xs:sequence>
      <xs:element name="extent" type="tns:BoundingBoxType"/>
      <xs:element name="rows" type="xs:int" default="1"/>
      <xs:element name="columns" type="xs:int" default="1"/>
      <xs:choice minOccurs="0">
        <xs:element name="cityGMLTilingOptions" type="tns:CityGMLTilingOptionsType"/>
        <xs:element name="kmlTilingOptions" type="tns:KmlTilingOptionsType"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CityGMLTilingOptionsType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractTilingOptionsType">
        <xs:sequence>
          <xs:element name="rows" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="columns" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="tilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="tilePathSuffix" type="tns:TileSuffixModeType" minOccurs="0"/>
          <xs:element name="tileNameSuffix" type="tns:TileNameSuffixModeType" minOccurs="0"/>
          <xs:element name="includeTileAsGenericAttribute" type="xs:boolean" default="false" minOccurs="0"/>
          <xs:element name="genericAttributeValue" type="tns:TileSuffixModeType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="AbstractTilingOptionsType" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="KmlTilingOptionsType">
    <xs:complexContent>
      <xs:extension base="tns:AbstractTilingOptionsType">
        <xs:sequence>
          <xs:element name="rows" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="columns" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="autoTileSideLength" type="xs:double"/>
        </xs:sequence>
        <xs:attribute name="mode" type="tns:KmlTilingModeType"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="PropertyProjectionModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="keep"/>
      <xs:enumeration value="remove"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="GenericAttributeTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="stringAttribute"/>
      <xs:enumeration value="intAttribute"/>
      <xs:enumeration value="doubleAttribute"/>
      <xs:enumeration value="dateAttribute"/>
      <xs:enumeration value="uriAttribute"/>
      <xs:enumeration value="measureAttribute"/>
      <xs:enumeration value="genericAttributeSet"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LodFilterModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="or"/>
      <xs:enumeration value="and"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LodSearchDepthModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="all"/>
      <xs:enumeration value="depth"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TileSuffixModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="row_column"/>
      <xs:enumeration value="xMin_yMin"/>
      <xs:enumeration value="xMax_yMin"/>
      <xs:enumeration value="xMin_yMax"/>
      <xs:enumeration value="xMax_yMax"/>
      <xs:enumeration value="xMin_yMin_xMax_yMax"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TileNameSuffixModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="sameAsPath"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="KmlTilingModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="no_tiling"/>
      <xs:enumeration value="automatic"/>
      <xs:enumeration value="manual"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

