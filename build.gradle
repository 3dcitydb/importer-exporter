import org.apache.tools.ant.filters.ReplaceTokens

apply from: 'properties.gradle'

subprojects {
    group 'org.citydb'
    version '4.0.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8

    repositories {
        maven {
            url 'http://download.osgeo.org/webdav/geotools/'
        }
        maven {
            url 'https://dl.bintray.com/3dcitydb/maven'
        }
        maven {
            url 'https://maven.imagej.net/content/repositories/thirdparty/'
        }
        jcenter()
    }

    javadoc {
        include 'org/citydb/**'
        options.overview "$buildDir/tmp/javadoc/overview.html"
        options.addStringOption('doctitle', project.name + ' - ' + project.version)
        options.addStringOption('Xdoclint:none', '-quiet')

        doFirst {
            copy {
                from "$rootDir/resources/javadoc/overview.html"
                into "$buildDir/tmp/javadoc"
                filteringCharset = 'UTF-8'
                filter(ReplaceTokens, tokens: [
                        name: project.name,
                        version: project.version,
                        impexpName: project.impexpName,
                        citydbWebsiteUrl: project.citydbWebsiteUrl,
                        vendorName: project.vendorName,
                        vendorOrganisation: project.vendorOrganisation,
                        vendorCountry: project.vendorCountry,
                        vendorCopyright: project.vendorCopyright,
                        vendorWebsiteUrl: project.vendorWebsiteUrl
                ])
            }
        }
    }

    jar {
        manifest {
            attributes('Implementation-Title': project.name,
                    'Implementation-Version': project.version
            )
        }
        into('META-INF') {
            from "$rootDir/resources/license/APACHE-2.0.txt"
            from "$rootDir/resources/license/LICENSE.txt"
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    def createPom = {
        name project.name
        url project.citydbVcsUrl
        licenses {
            license {
                name 'The Apache License, Version 2.0'
                url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
        scm {
            url project.impexpVcsUrl
            connection 'scm:git:' + project.impexpGit
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom.withXml {
                    asNode().children().last() + createPom
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}